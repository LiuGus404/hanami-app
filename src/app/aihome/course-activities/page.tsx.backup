'use client';

import { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { useRouter } from 'next/navigation';
import { 
  CalendarDaysIcon,
  ClockIcon,
  MapPinIcon,
  UserGroupIcon,
  AcademicCapIcon,
  StarIcon,
  ChevronRightIcon,
  Bars3Icon,
  XMarkIcon,
  HomeIcon,
  UserIcon,
  Cog6ToothIcon,
  ArrowRightOnRectangleIcon
} from '@heroicons/react/24/outline';
import { useSaasAuth } from '@/hooks/saas/useSaasAuthSimple';
import AppSidebar from '@/components/AppSidebar';

export default function CourseActivitiesPage() {
  const router = useRouter();
  const { user, loading, logout } = useSaasAuth();
  const [isLoaded, setIsLoaded] = useState(false);
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [currentTime, setCurrentTime] = useState(new Date());

  // 更新時間
  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentTime(new Date());
    }, 1000);
    return () => clearInterval(timer);
  }, []);

  useEffect(() => {
    setIsLoaded(true);
  }, []);

  // 登出處理
  const handleLogout = async () => {
    try {
      await logout();
      router.push('/aihome/auth/login');
    } catch (error) {
      console.error('登出失敗:', error);
    }
  };

  // 認證保護
  useEffect(() => {
    if (!loading && !user) {
      router.push('/aihome/auth/login');
    }
  }, [user, loading, router]);


  // 模擬課程活動數據
  const courseActivities = [
    {
      id: 1,
      institution: 'HanamiEcho 音樂學院',
      institutionLogo: '/hanami.png',
      courses: [
        {
          id: 1,
          name: '基礎鋼琴課程',
          instructor: '李老師',
          schedule: '每週一、三 14:00-15:00',
          location: '音樂教室 A',
          status: '進行中',
          progress: 75,
          nextClass: '2024-12-23 14:00',
          description: '適合初學者的鋼琴基礎課程，學習基本指法和樂理知識。'
        },
        {
          id: 2,
          name: '音樂理論課程',
          instructor: '王老師',
          schedule: '每週二、四 16:00-17:00',
          location: '理論教室 B',
          status: '進行中',
          progress: 60,
          nextClass: '2024-12-24 16:00',
          description: '深入學習音樂理論，包括和聲學、曲式分析等。'
        }
      ]
    },
    {
      id: 2,
      institution: '創意藝術中心',
      institutionLogo: '/hanami.png',
      courses: [
        {
          id: 3,
          name: '兒童合唱團',
          instructor: '陳老師',
          schedule: '每週六 10:00-11:30',
          location: '合唱廳',
          status: '進行中',
          progress: 40,
          nextClass: '2024-12-21 10:00',
          description: '培養兒童音樂素養和團隊合作精神的合唱課程。'
        }
      ]
    },
    {
      id: 3,
      institution: '數位音樂工作室',
      institutionLogo: '/hanami.png',
      courses: [
        {
          id: 4,
          name: '數位音樂製作',
          instructor: '張老師',
          schedule: '每週五 19:00-21:00',
          location: '錄音室',
          status: '即將開始',
          progress: 0,
          nextClass: '2024-12-27 19:00',
          description: '學習使用專業軟體進行音樂創作和製作。'
        }
      ]
    }
  ];

  // 顯示載入狀態
  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-[#FFF9F2] to-[#FFD59A] flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-[#4B4036] mx-auto mb-4"></div>
          <p className="text-[#4B4036]">載入中...</p>
        </div>
      </div>
    );
  }

  // 如果未認證，不渲染內容
  if (!user) {
    return null;
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#FFF9F2] via-[#FFFDF8] to-[#FFD59A]">
      {/* 頂部導航欄 */}
      <nav className={`bg-white/80 backdrop-blur-sm border-b border-[#EADBC8] sticky top-0 z-50 transition-all duration-300 ${sidebarOpen ? 'lg:ml-80' : ''}`}>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <div className="flex items-center space-x-4">
              {/* 選單按鈕 */}
              <motion.button
                onClick={() => setSidebarOpen(!sidebarOpen)}
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="p-2 rounded-lg hover:bg-[#FFD59A]/20 transition-colors relative z-[60]"
                title="開啟選單"
              >
                <Bars3Icon className="w-6 h-6 text-[#4B4036]" />
              </motion.button>
              
              <div className="w-10 h-10 relative">
                <img 
                  src="/@hanami.png" 
                  alt="HanamiEcho Logo" 
                  className="w-full h-full object-contain"
                />
              </div>
              <div>
                <h1 className="text-xl font-bold text-[#4B4036]">HanamiEcho</h1>
                <p className="text-sm text-[#2B3A3B]">課程活動</p>
              </div>
            </div>
            
            <div className="flex items-center space-x-4">
              <div className="text-sm text-[#2B3A3B]">
                {currentTime.toLocaleTimeString('zh-TW', { 
                  hour: '2-digit', 
                  minute: '2-digit' 
                })}
              </div>
              <div className="w-8 h-8 bg-gradient-to-br from-[#FFD59A] to-[#EBC9A4] rounded-full flex items-center justify-center">
                <span className="text-sm font-medium text-[#4B4036]">
                  {user.nickname?.charAt(0).toUpperCase() || 'U'}
                </span>
              </div>
              <motion.button
                onClick={handleLogout}
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="flex items-center space-x-2 px-3 py-2 text-sm text-[#2B3A3B] hover:text-[#4B4036] hover:bg-[#FFD59A]/20 rounded-lg transition-all duration-200"
                title="登出"
              >
                <ArrowRightOnRectangleIcon className="w-4 h-4" />
                <span>登出</span>
              </motion.button>
            </div>
          </div>
        </div>
      </nav>

      {/* 側邊欄選單 */}
      <AppSidebar 
        isOpen={sidebarOpen} 
        onClose={() => setSidebarOpen(false)}
        currentPath="/aihome/course-activities"
      />
            
            {/* 側邊欄 */}
            <motion.div
              initial={{ x: -300 }}
              animate={{ x: 0 }}
              exit={{ x: -300 }}
              transition={{ type: "spring", damping: 25, stiffness: 200 }}
              className="fixed left-0 top-0 h-full w-80 bg-white shadow-2xl z-50"
            >
              {/* 側邊欄標題 */}
              <div className="flex items-center justify-between p-6 border-b border-[#EADBC8]">
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 relative">
                    <img 
                      src="/@hanami.png" 
                      alt="HanamiEcho Logo" 
                      className="w-full h-full object-contain"
                    />
                  </div>
                  <div>
                    <h2 className="text-lg font-bold text-[#4B4036]">HanamiEcho</h2>
                    <p className="text-xs text-[#2B3A3B]">選單</p>
                  </div>
                </div>
                <motion.button
                  onClick={() => setSidebarOpen(false)}
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="p-2 rounded-lg hover:bg-[#FFD59A]/20 transition-colors"
                  title="關閉選單"
                >
                  <XMarkIcon className="w-5 h-5 text-[#4B4036]" />
                </motion.button>
              </div>

              {/* 選單項目 */}
              <div className="p-4 space-y-2">
                {sidebarMenuItems.map((item, index) => (
                  <motion.button
                    key={item.label}
                    initial={{ opacity: 0, x: -20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ delay: index * 0.1 }}
                    onClick={() => {
                      router.push(item.href);
                      setSidebarOpen(false);
                    }}
                    className={`w-full flex items-center space-x-4 p-4 rounded-xl transition-all duration-200 group ${
                      item.href === '/aihome/course-activities' 
                        ? 'bg-[#FFD59A]/20 border-2 border-[#FFD59A]' 
                        : 'hover:bg-[#FFD59A]/10'
                    }`}
                  >
                    <div className={`w-10 h-10 rounded-lg flex items-center justify-center transition-all duration-200 ${
                      item.href === '/aihome/course-activities'
                        ? 'bg-gradient-to-br from-[#FFD59A] to-[#EBC9A4]'
                        : 'bg-gradient-to-br from-[#FFD59A] to-[#EBC9A4] group-hover:from-[#EBC9A4] group-hover:to-[#FFD59A]'
                    }`}>
                      <item.icon className="w-5 h-5 text-[#4B4036]" />
                    </div>
                    <div className="flex-1 text-left">
                      <h3 className="font-semibold text-[#4B4036]">{item.label}</h3>
                      <p className="text-sm text-[#2B3A3B]">{item.description}</p>
                    </div>
                    <svg className="w-4 h-4 text-[#2B3A3B] group-hover:text-[#4B4036] transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                    </svg>
                  </motion.button>
                ))}
              </div>

              {/* 用戶信息 */}
              <div className="absolute bottom-0 left-0 right-0 p-4 border-t border-[#EADBC8] bg-[#FFF9F2]">
                <div className="flex items-center space-x-3">
                  <div className="w-10 h-10 bg-gradient-to-br from-[#FFD59A] to-[#EBC9A4] rounded-full flex items-center justify-center">
                    <span className="text-sm font-medium text-[#4B4036]">
                      {user.nickname?.charAt(0).toUpperCase() || 'U'}
                    </span>
                  </div>
                  <div className="flex-1">
                    <p className="font-medium text-[#4B4036]">{user.nickname || '用戶'}</p>
                    <p className="text-xs text-[#2B3A3B]">{user.email}</p>
                  </div>
                </div>
              </div>
            </motion.div>
          </>
        )}
      </AnimatePresence>

      <div className={`max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 transition-all duration-300 ${sidebarOpen ? 'lg:ml-80' : ''}`}>
        {/* 頁面標題 */}
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={isLoaded ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8 }}
          className="text-center mb-12"
        >
          <h1 className="text-4xl font-bold text-[#4B4036] mb-4">
            我的課程活動
          </h1>
          <p className="text-xl text-[#2B3A3B] max-w-3xl mx-auto">
            查看您報讀的所有機構和課程活動，掌握學習進度和安排
          </p>
        </motion.div>

        {/* 課程活動列表 */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={isLoaded ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8, delay: 0.2 }}
          className="space-y-8"
        >
          {courseActivities.map((institution, institutionIndex) => (
            <motion.div
              key={institution.id}
              initial={{ opacity: 0, y: 20 }}
              animate={isLoaded ? { opacity: 1, y: 0 } : {}}
              transition={{ duration: 0.6, delay: 0.4 + institutionIndex * 0.1 }}
              className="bg-white rounded-2xl p-6 shadow-lg border border-[#EADBC8]"
            >
              {/* 機構標題 */}
              <div className="flex items-center space-x-4 mb-6">
                <div className="w-12 h-12 relative">
                  <img 
                    src={institution.institutionLogo} 
                    alt={`${institution.institution} Logo`}
                    className="w-full h-full object-contain"
                  />
                </div>
                <div>
                  <h2 className="text-2xl font-bold text-[#4B4036]">{institution.institution}</h2>
                  <p className="text-[#2B3A3B]">{institution.courses.length} 個課程</p>
                </div>
              </div>

              {/* 課程列表 */}
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {institution.courses.map((course, courseIndex) => (
                  <motion.div
                    key={course.id}
                    initial={{ opacity: 0, scale: 0.9 }}
                    animate={isLoaded ? { opacity: 1, scale: 1 } : {}}
                    transition={{ duration: 0.5, delay: 0.6 + institutionIndex * 0.1 + courseIndex * 0.1 }}
                    whileHover={{ scale: 1.02 }}
                    className="bg-gradient-to-br from-[#FFF9F2] to-[#FFD59A]/20 rounded-xl p-6 border border-[#EADBC8] hover:shadow-lg transition-all duration-300"
                  >
                    {/* 課程標題和狀態 */}
                    <div className="flex items-start justify-between mb-4">
                      <div className="flex-1">
                        <h3 className="text-lg font-semibold text-[#4B4036] mb-1">{course.name}</h3>
                        <div className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${
                          course.status === '進行中' 
                            ? 'bg-green-100 text-green-800' 
                            : course.status === '即將開始'
                            ? 'bg-blue-100 text-blue-800'
                            : 'bg-gray-100 text-gray-800'
                        }`}>
                          {course.status}
                        </div>
                      </div>
                      <ChevronRightIcon className="w-5 h-5 text-[#2B3A3B]" />
                    </div>

                    {/* 課程信息 */}
                    <div className="space-y-3 mb-4">
                      <div className="flex items-center space-x-2">
                        <UserGroupIcon className="w-4 h-4 text-[#4B4036]" />
                        <span className="text-sm text-[#2B3A3B]">{course.instructor}</span>
                      </div>
                      <div className="flex items-center space-x-2">
                        <ClockIcon className="w-4 h-4 text-[#4B4036]" />
                        <span className="text-sm text-[#2B3A3B]">{course.schedule}</span>
                      </div>
                      <div className="flex items-center space-x-2">
                        <MapPinIcon className="w-4 h-4 text-[#4B4036]" />
                        <span className="text-sm text-[#2B3A3B]">{course.location}</span>
                      </div>
                    </div>

                    {/* 進度條 */}
                    {course.progress > 0 && (
                      <div className="mb-4">
                        <div className="flex justify-between items-center mb-2">
                          <span className="text-sm font-medium text-[#4B4036]">學習進度</span>
                          <span className="text-sm text-[#2B3A3B]">{course.progress}%</span>
                        </div>
                        <div className="w-full bg-[#EADBC8] rounded-full h-2">
                          <div 
                            className="bg-gradient-to-r from-[#FFD59A] to-[#EBC9A4] h-2 rounded-full transition-all duration-500"
                            style={{ width: `${course.progress}%` }}
                          ></div>
                        </div>
                      </div>
                    )}

                    {/* 下次課程 */}
                    <div className="bg-white/50 rounded-lg p-3 mb-4">
                      <div className="flex items-center space-x-2 mb-1">
                        <CalendarDaysIcon className="w-4 h-4 text-[#4B4036]" />
                        <span className="text-sm font-medium text-[#4B4036]">下次課程</span>
                      </div>
                      <p className="text-sm text-[#2B3A3B]">{course.nextClass}</p>
                    </div>

                    {/* 課程描述 */}
                    <p className="text-sm text-[#2B3A3B] leading-relaxed">{course.description}</p>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          ))}
        </motion.div>

        {/* 空狀態 */}
        {courseActivities.length === 0 && (
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={isLoaded ? { opacity: 1, y: 0 } : {}}
            transition={{ duration: 0.8, delay: 0.4 }}
            className="text-center py-16"
          >
            <div className="w-24 h-24 bg-gradient-to-br from-[#FFD59A] to-[#EBC9A4] rounded-full flex items-center justify-center mx-auto mb-6">
              <AcademicCapIcon className="w-12 h-12 text-[#4B4036]" />
            </div>
            <h3 className="text-2xl font-bold text-[#4B4036] mb-4">還沒有報讀任何課程</h3>
            <p className="text-lg text-[#2B3A3B] mb-8">開始您的學習之旅，探索豐富的課程活動</p>
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              onClick={() => router.push('/aihome')}
              className="inline-flex items-center px-6 py-3 bg-gradient-to-r from-[#FFD59A] to-[#EBC9A4] text-[#4B4036] rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-200"
            >
              探索課程
              <ChevronRightIcon className="w-5 h-5 ml-2" />
            </motion.button>
          </motion.div>
        )}
      </div>
    </div>
  );
}
